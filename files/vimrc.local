" Troy's Customizations
" #############################################################################

" Useful to know:
" ,d   = NERDTree
" ,t   = CtrlP
" ,b   = CtrlP (Buffers)
" ,a   = ag (semi-broken... https://github.com/rking/ag.vim/issues/69)
" ,c   = TagBar
" ,hl  = hide search highlights
" ,ig  = ident guide
" cs"' = swap " for ' outside current word

" GitGutter
let g:gitgutter_enabled = 1
let g:gitgutter_signs = 1
" let g:gitgutter_highlight_lines = 1

let g:tagbar_type_javascript = {
    \ 'ctagsbin' : '/usr/local/bin/jsctags'
    \ }

" nnoremap <Leader>c :TagbarToggle<CR>

nnoremap \\ :call NERDComment(0,"toggle")<CR>
vnoremap \\ :call NERDComment(0,"toggle")<CR>

" first remove JSHint.vm!
" then make sure to run this first:
" "npm install -g eslint babel-eslint eslint-plugin-react"
let g:syntastic_javascript_checkers = ['standard']
" let g:syntastic_javascript_checkers = ['eslint']
" let g:jsx_ext_required = 0 " Allow JSX in normal JS files

" EditorConfig
" make sure to run `brew install editorconfig` first
let g:EditorConfig_core_mode = 'external_command'

au BufRead,BufNewFile *.md set filetype=markdown

set nomodeline

" Maximum Awesome's Default 'Locals'
" #############################################################################

set nocursorline " don't highlight current line

" keyboard shortcuts
inoremap jj <ESC>

" highlight search
set hlsearch
nmap <leader>hl :let @/ = ""<CR>

" gui settings
if (&t_Co == 256 || has('gui_running'))
  if ($TERM_PROGRAM == 'iTerm.app')
    colorscheme solarized
  else
    colorscheme desert
  endif
endif

" Disambiguate ,a & ,t from the Align plugin, making them fast again.
"
" This section is here to prevent AlignMaps from adding a bunch of mappings
" that interfere with the very-common ,a and ,t mappings. This will get run
" at every startup to remove the AlignMaps for the *next* vim startup.
"
" If you do want the AlignMaps mappings, remove this section, remove
" ~/.vim/bundle/Align, and re-run rake in maximum-awesome.
function! s:RemoveConflictingAlignMaps()
  if exists("g:loaded_AlignMapsPlugin")
    AlignMapsClean
  endif
endfunction
command! -nargs=0 RemoveConflictingAlignMaps call s:RemoveConflictingAlignMaps()
silent! autocmd VimEnter * RemoveConflictingAlignMaps

